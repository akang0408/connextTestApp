{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\n\n/*eslint-disable*/\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport fetch from 'isomorphic-unfetch';\nimport Task from '../components/Tasks';\nexport default function Home(props) {\n  var _useState = useState(''),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState([]),\n      taskArr = _useState2[0],\n      getTasks = _useState2[1];\n\n  useEffect(function () {\n    var cookie = window.document.cookie.split(';')[0].slice(3);\n    console.log('Use Effect Cookie:', cookie);\n    setId(cookie);\n  }); // useEffect(() => {\n  //   fetch(`/home/${id}`)\n  //     .then((data) => data.json())\n  //     .then((res) => {\n  //       getTasks(res);\n  //     })\n  //     .catch((err) => console.log(err))\n  // }, [id]);\n\n  var fetchTasks = function fetchTasks() {\n    var apiCall, data;\n    return _regeneratorRuntime.async(function fetchTasks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"/home/\".concat(id)));\n\n          case 2:\n            apiCall = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(apiCall.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(data);\n            getTasks(data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchTasks();\n  }, [taskArr]);\n  var allTasks = taskArr.map(function (el) {\n    return __jsx(Task, {\n      id: el.id,\n      task: el.tasks\n    });\n  });\n  return __jsx(\"div\", null, __jsx(Header, null), allTasks, __jsx(\"h3\", null, props.quote), __jsx(\"h5\", null, \"-\", props.author));\n}\n\nHome.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.quotable.io/random'));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context2.sent;\n          console.log(\"Quote data fetched. content is: \".concat(data.content));\n          return _context2.abrupt(\"return\", {\n            quote: data.content,\n            author: data.author\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}; // useEffect(() => {\n//   fetch(`/home/${id}`)\n//     .then((data) => data.json())\n//     .then((res) => {\n//       const arr = res.map((el) => {\n//         return (<Task\n//           id={el.id}\n//           task={el.tasks}\n//         />)\n//       })\n//       getTasks(arr);\n//       return;\n//     })\n// }, [taskArr]);","map":{"version":3,"sources":["/Users/Eli/Coding/connextTestApp/pages/home.js"],"names":["React","useEffect","useState","Header","fetch","Task","Home","props","id","setId","taskArr","getTasks","cookie","window","document","split","slice","console","log","fetchTasks","apiCall","json","data","allTasks","map","el","tasks","quote","author","getInitialProps","res","content"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,kBAEdL,QAAQ,CAAC,EAAD,CAFM;AAAA,MAE3BM,EAF2B;AAAA,MAEvBC,KAFuB;;AAAA,mBAINP,QAAQ,CAAC,EAAD,CAJF;AAAA,MAI3BQ,OAJ2B;AAAA,MAIlBC,QAJkB;;AAMlCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBG,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,EAAqCC,KAArC,CAA2C,CAA3C,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCN,MAAlC;AACAH,IAAAA,KAAK,CAACG,MAAD,CAAL;AACD,GAJQ,CAAT,CANkC,CAYlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKf,KAAK,iBAAUI,EAAV,EADV;;AAAA;AACXY,YAAAA,OADW;AAAA;AAAA,6CAEEA,OAAO,CAACC,IAAR,EAFF;;AAAA;AAEXC,YAAAA,IAFW;AAGjBL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAX,YAAAA,QAAQ,CAACW,IAAD,CAAR;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAOArB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACT,OAAD,CAFM,CAAT;AAIA,MAAMa,QAAQ,GAAGb,OAAO,CAACc,GAAR,CAAY,UAACC,EAAD,EAAQ;AACnC,WAAQ,MAAC,IAAD;AACN,MAAA,EAAE,EAAEA,EAAE,CAACjB,EADD;AAEN,MAAA,IAAI,EAAEiB,EAAE,CAACC;AAFH,MAAR;AAID,GALgB,CAAjB;AAOA,SACE,mBACE,MAAC,MAAD,OADF,EAEGH,QAFH,EAGE,kBAAKhB,KAAK,CAACoB,KAAX,CAHF,EAIE,uBAAMpB,KAAK,CAACqB,MAAZ,CAJF,CADF;AAQD;;AAEDtB,IAAI,CAACuB,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHzB,KAAK,CAAC,gCAAD,CADF;;AAAA;AACf0B,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACT,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAGrBL,UAAAA,OAAO,CAACC,GAAR,2CAA+CI,IAAI,CAACS,OAApD;AAHqB,4CAKd;AACLJ,YAAAA,KAAK,EAAEL,IAAI,CAACS,OADP;AAELH,YAAAA,MAAM,EAAEN,IAAI,CAACM;AAFR,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*eslint-disable*/\nimport React, { useEffect, useState } from 'react'\nimport Header from '../components/Header';\nimport fetch from 'isomorphic-unfetch';\nimport Task from '../components/Tasks';\n\nexport default function Home(props) {\n\n  const [id, setId] = useState('');\n\n  const [taskArr, getTasks] = useState([]);\n\n  useEffect(() => {\n    const cookie = window.document.cookie.split(';')[0].slice(3);\n    console.log('Use Effect Cookie:', cookie);\n    setId(cookie);\n  });\n\n  // useEffect(() => {\n  //   fetch(`/home/${id}`)\n  //     .then((data) => data.json())\n  //     .then((res) => {\n  //       getTasks(res);\n  //     })\n  //     .catch((err) => console.log(err))\n  // }, [id]);\n\n  const fetchTasks = async () => {\n    const apiCall = await fetch(`/home/${id}`);\n    const data = await apiCall.json();\n    console.log(data);\n    getTasks(data);\n  }\n\n  useEffect(() => {\n    fetchTasks();\n  }, [taskArr]);\n\n  const allTasks = taskArr.map((el) => {\n    return (<Task\n      id={el.id}\n      task={el.tasks}\n    />)\n  })\n\n  return (\n    <div>\n      <Header />\n      {allTasks}\n      <h3>{props.quote}</h3> \n      <h5>-{props.author}</h5>\n    </div>\n  );\n}\n\nHome.getInitialProps = async function() {\n  const res = await fetch('https://api.quotable.io/random');\n  const data = await res.json();\n  console.log(`Quote data fetched. content is: ${data.content}`);\n\n  return { \n    quote: data.content,\n    author: data.author,\n  };\n}\n\n// useEffect(() => {\n//   fetch(`/home/${id}`)\n//     .then((data) => data.json())\n//     .then((res) => {\n//       const arr = res.map((el) => {\n//         return (<Task\n//           id={el.id}\n//           task={el.tasks}\n//         />)\n//       })\n//       getTasks(arr);\n//       return;\n//     })\n// }, [taskArr]);"]},"metadata":{},"sourceType":"module"}